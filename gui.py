# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
import time

from tkintermapview import TkinterMapView
from pathlib import Path
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, StringVar
import requests
from bs4 import BeautifulSoup
from selenium.webdriver.common.by import By
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.options import Options

Rspeed = "N/A"
RAlt = "N/A"

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"./assets/frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def searchTrain():
    print(flightNo.get())

    options = Options()
    options.headless = True
    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))
    driver.minimize_window()
    driver.get("https://www.google.co.in/search?q=" + flightNo.get() + "train+running+status")
    status = driver.find_elements(By.CLASS_NAME, "z71nKb")
    stations = driver.find_elements(By.CLASS_NAME, "oftQid")
    trainInfo = driver.find_elements(By.CLASS_NAME, "k9rLYb")

    for info in trainInfo:
        print(info.text)
        print("\n")

    for st in status:
        print(st.text)
        print("\n")

    for s in stations:
        if s.text != "":
            print(s.text)

    canvas.create_text(
        809.0,
        39.0,
        anchor="nw",
        text="Train Status",
        fill="#000000",
        font=("Inter Bold", 40 * -1)
    )

    canvas.create_text(
        809.0,
        163.0,
        anchor="nw",
        text="Train Information",
        fill="#FFFFFF",
        font=("Inter Bold", 16 * -1)
    )

    canvas.create_text(
        809.0,
        201.0,
        anchor="nw",
        text="Train Number",
        fill="#FFFFFF",
        font=("Inter Regular", 15 * -1)
    )

    canvas.create_text(
        809.0,
        223.0,
        anchor="nw",
        text=trainInfo[0].text,
        fill="#FFFFFF",
        font=("Inter ExtraBold", 15 * -1)
    )

    canvas.create_text(
        1025.0,
        198.0,
        anchor="nw",
        text="Train Name",
        fill="#FFFFFF",
        font=("Inter Regular", 15 * -1)
    )

    canvas.create_text(
        824.0,
        341.0,
        anchor="nw",
        text=status[-1].text,
        fill="#000000",
        font=("Inter Regular", 15 * -1)
    )


def search():
    print(flightNo.get())
    print(flightNo.get()[0:2])
    print(flightNo.get()[2:])
    URL = "https://www.flightstats.com/v2/flight-tracker/" + flightNo.get()[0:2] + "/" + flightNo.get()[2:] + "?year=2022&month=12&date=26"
    page = requests.get(URL)
    soup = BeautifulSoup(page.content, "html.parser")

    cities = soup.findAll("div", class_="text-helper__TextHelper-sc-8bko4a-0 efwouT")
    date = soup.find("div", class_="text-helper__TextHelper-sc-8bko4a-0 cPBDDe")
    arivalTime = soup.find("div", class_="text-helper__TextHelper-sc-8bko4a-0 kbHzdx")
    gate = soup.find("div", class_="ticket__TGBValue-sc-1rrbl5o-16 hUgYLc text-helper__TextHelper-sc-8bko4a-0 kbHzdx")
    speed = soup.find("span", class_="speed__HeadingValue-sc-15dwb59-1 iZlHGH")
    altitude = soup.find("span", class_="alt-and-phase__ContentBox-sc-jihjun-3 bNZNxp")
    aircraft_type_code = soup.findAll("h5", class_="labeled-columns__Value-sc-j3eq63-1 exDPyn")

    element = None

    print(cities[0].text)
    print(cities[1].text)
    print(date.text)
    print(arivalTime.text)
    print(gate.text)
    if speed is not element:
        Rspeed = speed.text
        RAlt = altitude.text
        print(speed.text)
        print(altitude.text)

    else:
        Rspeed = "N/A"
        Raltitude = "N/A"

    print(aircraft_type_code[-1].text)
    print(aircraft_type_code[-2].text)

    canvas.create_text(
        809.0,
        12.0,
        anchor="nw",
        text=flightNo.get() + " Flight From",
        fill="#000000",
        font=("Inter", 12 * -1)
    )

    canvas.create_text(
        809.0,
        110.0,
        anchor="nw",
        text="to " + cities[1].text,
        fill="#000000",
        font=("Inter", 12 * -1)
    )

    canvas.create_text(
        809.0,
        39.0,
        anchor="nw",
        text=cities[0].text,
        fill="#000000",
        font=("Inter Bold", 40 * -1)
    )

    canvas.create_text(
        809.0,
        163.0,
        anchor="nw",
        text="Flight Information",
        fill="#FFFFFF",
        font=("Inter Bold", 16 * -1)
    )

    canvas.create_text(
        809.0,
        201.0,
        anchor="nw",
        text="Date",
        fill="#FFFFFF",
        font=("Inter Regular", 15 * -1)
    )

    canvas.create_text(
        809.0,
        223.0,
        anchor="nw",
        text=date.text[0:6],
        fill="#FFFFFF",
        font=("Inter ExtraBold", 15 * -1)
    )

    canvas.create_text(
        925.0,
        201.0,
        anchor="nw",
        text="Arival Time",
        fill="#FFFFFF",
        font=("Inter Regular", 15 * -1)
    )

    canvas.create_text(
        925.0,
        223.0,
        anchor="nw",
        text=arivalTime.text,
        fill="#FFFFFF",
        font=("Inter ExtraBold", 15 * -1)
    )

    canvas.create_text(
        1025.0,
        198.0,
        anchor="nw",
        text="Flight No.",
        fill="#FFFFFF",
        font=("Inter Regular", 15 * -1)
    )

    canvas.create_text(
        1025.0,
        220.0,
        anchor="nw",
        text=flightNo.get(),
        fill="#FFFFFF",
        font=("Inter ExtraBold", 15 * -1)
    )

    canvas.create_text(
        1144.0,
        201.0,
        anchor="nw",
        text="Gate",
        fill="#FFFFFF",
        font=("Inter Regular", 15 * -1)
    )

    canvas.create_text(
        1144.0,
        220.0,
        anchor="nw",
        text=gate.text,
        fill="#FFFFFF",
        font=("Inter ExtraBold", 15 * -1)
    )

    canvas.create_text(
        824.0,
        341.0,
        anchor="nw",
        text="Speed",
        fill="#000000",
        font=("Inter Regular", 15 * -1)
    )

    canvas.create_text(
        824.0,
        366.0,
        anchor="nw",
        text=Rspeed,
        fill="#000000",
        font=("Inter Bold", 30 * -1)
    )

    canvas.create_text(
        1039.0,
        366.0,
        anchor="nw",
        text=Rspeed,
        fill="#000000",
        font=("Inter Bold", 30 * -1)
    )

    canvas.create_text(
        1039.0,
        336.0,
        anchor="nw",
        text="Altitude",
        fill="#000000",
        font=("Inter Regular", 15 * -1)
    )

    canvas.create_text(
        810.0,
        481.0,
        anchor="nw",
        text="Aircraft Details",
        fill="#000000",
        font=("Inter Bold", 20 * -1)
    )

    canvas.create_text(
        809.0,
        523.0,
        anchor="nw",
        text="Type",
        fill="#000000",
        font=("Inter SemiBold", 14 * -1)
    )

    canvas.create_text(
        809.0,
        588.0,
        anchor="nw",
        text="Call Sign",
        fill="#000000",
        font=("Inter SemiBold", 14 * -1)
    )

    canvas.create_text(
        809.0,
        550.0,
        anchor="nw",
        text=aircraft_type_code[-1].text,
        fill="#000000",
        font=("Inter Regular", 14 * -1)
    )

    canvas.create_text(
        809.0,
        615.0,
        anchor="nw",
        text=aircraft_type_code[-2].text,
        fill="#000000",
        font=("Inter Regular", 14 * -1)
    )
    marker_1 = map_widget.set_address(cities[0].text, marker=True)
    marker_2 = map_widget.set_address(cities[1].text, marker=True)

    path_1 = map_widget.set_path([marker_1.position, marker_2.position])


def searchCheck():
    print(flightNo.get()[0:2])
    if flightNo.get().isnumeric():
        searchTrain()
    else:
        search()


window = Tk()

window.geometry("1199x775")
window.configure(bg="#FFFFFF")
flightNo = StringVar()

canvas = Canvas(
    window,
    bg="#FFFFFF",
    height=775,
    width=1550,
    bd=0,
    highlightthickness=0,
    relief="ridge"
)

canvas.place(x=0, y=0)

map_widget = TkinterMapView(window, width=775.0, height=1550, corner_radius=0)
map_widget.place(x=0, y=0)
map_widget.set_tile_server("https://mt0.google.com/vt/lyrs=m&hl=en&x={x}&y={y}&z={z}&s=Ga", max_zoom=5)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    216.0,
    50.5,
    image=entry_image_1
)
entry_1 = Entry(
    textvariable=flightNo,
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_1.place(
    x=34.0,
    y=24.0,
    width=364.0,
    height=51.0
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    993.0,
    373.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    380.0,
    51.0,
    image=image_image_4
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png")
)
image_2 = canvas.create_image(
    993.0,
    209.0,
    image=image_image_2
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: searchCheck(),
    relief="flat"
)
button_1.place(
    x=436.0,
    y=24.0,
    width=105.0,
    height=53.0
)
window.resizable(False, False)
window.mainloop()
